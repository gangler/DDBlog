<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
string inputFile =@"..\\DDBlog\\DwDxx.Model\\EntityModel";
var files = Directory.GetFiles(inputFile, "*.cs");

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>
using DwDxx.IDAL;

namespace DwDxx.DALFactory
{
	public partial class AbstractFactory
	{
	<#
	foreach (var file in files)
	{
	var entity = Path.GetFileNameWithoutExtension(file);
	#>		
		public static I<#=entity#>Dal Create<#=entity#>Dal()
		{
			string fullClassName = NameSpace + ".<#=entity#>Dal";
			return CreateInstance(fullClassName) as I<#=entity#>Dal;
		}
<#}#>	}
}